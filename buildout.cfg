[buildout]
parts = 
    project-directories
    sphinxbuilder
    pydev
    python
    django
    pylint
    fabric
    django-tests
    node-js
    celery
    
    

develop = .
eggs = ${project:project-name}

versions = versions
bin-directory = bin
develop-eggs-directory = lib/buildout/develop-eggs
installed = lib/buildout/.installed.cfg
parts-directory = lib/buildout/parts

[project]
project-name = tweetlistener
project-version = 
project-url = 
project-license =
author = 

[fab-template]
extends = project
recipe = z3c.recipe.filetemplate
files = fabfile.py
source-directory = etc/templates

[start-django-project]
recipe = plone.recipe.command
command = bin/python etc/bin/django-admin.py startproject ${project:project-name} src/; cp etc/templates/test_settings.py src/${project:project-name}/; cp etc/templates/dev_settings.py src/${project:project-name}/; rm src/manage.py


#
# Setup the following in ~/.buildout/default.cfg
# for faster downloads and better buildout performance
#
# [buildout]
# eggs-directory = <HOME-DIR>/.buildout/eggs
# download-cache = <HOME-DIR>/.buildout/dlcache
#

[versions]
Django = 1.5.5
Fabric = 1.8.0

[python]
recipe = zc.recipe.egg
interpreter = python
eggs = ${buildout:eggs}

[project-directories]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/tests
    ${buildout:directory}/lib
    ${buildout:directory}/etc
    ${buildout:directory}/src
    ${buildout:directory}/docs
    ${buildout:directory}/out

[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/docs
build = ${buildout:directory}/out/docs

[pydev]
recipe = pb.recipes.pydev
eggs = ${django-tests:eggs}

[fabric]
recipe = zc.recipe.egg
unzip = true
eggs = Fabric
	   ${buildout:eggs}
	   ${pylint:eggs}

[django]
recipe = djangorecipe
projectegg = ${project:project-name}
settings = dev_settings
eggs = ${buildout:eggs}


[django-tests]
recipe = djangorecipe
projectegg = ${project:project-name}
settings = test_settings
extra-paths = tests
eggs = django_nose
       nose-progressive
       coverage
       mock
       ${buildout:eggs}
control-script = test

[node-js]
recipe = gp.recipe.node
npms = less jshint

[pylint]
recipe = zc.recipe.egg
unzip = true
eggs = pylint
	   ${buildout:eggs}


[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}

[celery]
recipe = zc.recipe.egg
eggs = celery
     ${buildout:eggs}
